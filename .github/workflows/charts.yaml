name: Helm Chart Release

permissions:
  packages: write
  contents: write
# on:
#   schedule:
#     - cron:  '0 0 * * *'

on:
  push:
    branches:
        - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: 'truecharts/charts'

      - name: Install Helm
        uses: azure/setup-helm@v1

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: charts/stable

      - name: Chart releaser
        run: |
          # Download chart releaser
          curl -sSLo cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/v1.5.0/chart-releaser_1.5.0_linux_amd64.tar.gz"
          tar -xzf cr.tar.gz
          rm -f cr.tar.gz
          repo=$(cut -d '/' -f 2 <<< "$GITHUB_REPOSITORY")
          owner=$(cut -d '/' -f 1 <<< "$GITHUB_REPOSITORY")
          exists=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/{{repo_name}}$repo/releases/tags/$repo-${{ steps.fix_tag.outputs.tag }} -w %{http_code} -o /dev/null)
          if [[ $exists != "200" ]]; then
            echo "Creating release..."
            # package chart
            ./cr package ${{ inputs.chart_path }}/$repo
            # upload chart to github releases
            ./cr upload \
                --owner "$owner" \
                --git-repo "$repo" \
                --token "${{ secrets.GITHUB_TOKEN }}"
            # Update index and push to github pages
            ./cr index \
                --owner "$owner" \
                --git-repo "$repo" \
                --token "${{ secrets.GITHUB_TOKEN }}" \
                --charts-repo ${{ inputs.chart_url }} \
                --push
          else
            echo "Release already exists"
          fi